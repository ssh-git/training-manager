@model TrainingProviderViewModels.EditViewModel

@section Title{
    Edit Training Provider
}

<h2>Edit Training Provider</h2>


@using (Html.BeginForm("Edit", "TrainingProviders", FormMethod.Post, new {enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name,  new {@class = "control-label col-md-2"})
            <div class="col-md-10 form-control-static">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control", rows = 5}})
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SiteUrl, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.SiteUrl, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.SiteUrl, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedLogo,  new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.CurrentLogo.FileName)
                @Html.DropDownListFor(model => model.SelectedLogo.LocalUrl, Model.LogosSelectList, new { id = "logo-dropdown", @class = "form-control" })
                <div id="logo-container" class="col-md-10 form-control-static">
                    <img height="40" src="@Model.CurrentLogo.LocalUrl"/>
                </div>
                @Html.ValidationMessageFor(model => model.SelectedLogo, "", new { @class = "text-danger" })
                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogoUpload, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.LogoUpload)
                @Html.ValidationMessageFor(model => model.LogoUpload, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedUpdateHours, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.HiddenFor(model => model.AllowedUpdateUtcHoursString)
                @Html.CheckBoxListFor(model => model.SelectedUpdateHours, Model.UpdateHoursSelectList, new {@class = "checkbox-inline"})
                @Html.ValidationMessageFor(model => model.SelectedUpdateHours, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UpdateFrequencyHours, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.UpdateFrequencyHours, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.UpdateFrequencyHours, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SourceUrl, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.SourceUrl, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.SourceUrl, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SourceLocation, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.SourceLocation, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.SourceLocation, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AssemblyType,  new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.AssemblyType, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.AssemblyType, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsDeleted, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IsDeleted, Model.IsDeletedSelectList, new {@class = "form-control"})
               
                @Html.ValidationMessageFor(model => model.IsDeleted, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default btn-sm" })
                <input type="submit" value="Save" class="btn btn-success btn-sm" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $("#logo-dropdown").change(function () {
            $("#logo-container>img").attr("src", $("option:selected", this).attr("value"));
        });
    </script>
}
